
class Solution
{
    public:
    //Function to rotate a linked list.
    void insertAtTail(int data, Node* &head, Node* &tail)
    {
        if(head==NULL)
        {
            head = new Node(data);
            tail = head;
        }
        else
        {
            tail->next = new Node(data);
            tail = tail->next;
        }
        return;
    }
    
    Node* rotate(Node* temp, int k)
    {
        Node*head=NULL;
        Node*tail=NULL; 
        
        vector<int>v;
        int cnt=0;
        
        while(temp!=NULL){
             v.push_back(temp->data);
             temp=temp->next;
             cnt++;
        }
        if(k>cnt){
            k=(k%cnt);
        }
        
        reverse(v.begin(),v.begin()+k);
        reverse(v.begin()+k,v.end());
        reverse(v.begin(),v.end());
        for(int i=0;i<v.size();i++){
         insertAtTail(v[i],head,tail);
         }
      return head;
    
    }
};